.TH SHEEPDOG 8 @DATE@
.SH NAME
sheepfs \- A pseudo file system exports both Sheepdog's internal state as well as Sheepdog's storage
.SH SYNOPSIS
.B "sheepfs [OPTION]... MOUNTPOINT"
.SH DESCRIPTION
.B sheepfs
- Sheepdog is a distributed storage system for QEMU. It provides
highly available block level storage volumes to virtual machines.
Sheepdog supports advanced volume management features such as snapshot,
cloning, and thin provisioning. The architecture of Sheepdog is fully
symmetric; there is no central node such as a meta-data server.

The server daemon is called sheep(8).  A command line utility is available
via dog(8). A pseudo file system is available via sheepfs(8). QEMU
virtual machines use the sheep daemon via a block driver available in qemu(1).

Sheepfs is a FUSE-based pseudo file system in userland to access both
Sheepdog's internal state (for e.g, cluster info, vdi list) as well as
Sheepdog's high reliable storage.

The idea here is that its sometimes useful that we can envision our interaction
with an Sheepdog's object in terms of a directory structure and filesystem
operations.

People might be mostly interested into sheepfs's volume directory, which export
VM's volume as a pseudo block file in your local file system hierarchy, which
can be used as

1. a big file abstraction, which is actually backed by Sheepdog's storage, distributed in the cluster.

2. a loop device file, which you can mount wherever you want to use it as a file system backed up by Sheepdog.

3. a loop device file for some VM's image, which you want to access(RW) its internal data.

4. storage media for other hypervisor, such as XEN

This file abstraction integrates well into kernel's pagecache.
.SH OPTIONS
@OPTIONS@

.SH DEPENDENCIES
\fBSheepdog\fP requires QEMU 0.13.z or later and Corosync 1.y.z.

.SH FILES
none

.SH SEE ALSO
.BR sheep(8),
.BR dog(8),
.BR qemu(1),
.BR corosync_overview(8)

.SH AUTHORS
This software is developed by the Sheepdog community which may be reached
via mailing list at <sheepdog@lists.wpkg.org>.
.PP
